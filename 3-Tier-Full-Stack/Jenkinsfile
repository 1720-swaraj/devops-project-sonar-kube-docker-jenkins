pipeline {
    agent any
    tools {
        nodejs 'nodejs'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('git checkout') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('3-Tier-Full-Stack') {
                    sh 'npm install'
                }
            }
        }
        stage('Unit tests') {
            steps {
                dir('3-Tier-Full-Stack') {
                    sh 'npm test'
                }
            }
        }
        stage('Trivy Fs Scan') {
            steps {
                sh 'trivy fs --format table -o fs-report.html .'
            }
        }
        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh " $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Campground -Dsonar.projectName=Campground"
                }
            }
        }
            stage('Docker Build & tag') {
                steps {
                    dir('3-Tier-Full-Stack') {
                        script {
                        withDockerRegistry(credentialsId: 'docker-cred') {
                            sh 'docker build -t swaraj9/campa:latest .'
                        }
                        }
                    }
                }
            }
            stage('Trivy Image Scan') {
                steps {
                    sh 'trivy image --format table -o fs-report.html swaraj9/campa:latest'
                }
            }
            stage('Docker Image Push') {
                steps {
                    withDockerRegistry(credentialsId: 'docker-cred', url: 'https://index.docker.io/v1/') {
                        sh 'docker push swaraj9/campa:latest'
                    }
                }
            }
            // stage('Docker Deploy to Dev') {
            //     steps {
            //         withDockerRegistry(credentialsId: 'docker-cred', url: 'https://index.docker.io/v1/') {
            //             sh 'docker run -d -p 3000:3000 swaraj9/camp:latest'
            //         }
            //     }
            // }
            stage('K8-cluster') {
                steps {
                    withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'MY-EKS-1', contextName: '', credentialsId: 'jenkins', namespace: 'webapps', serverUrl: 'https://43F72234233079FDEB1AE954592EBE7E.gr7.us-east-1.eks.amazonaws.com']]) {
                    sh 'kubectl apply -f dss.yml'
                    sleep 60
                    }
                }
            }
            stage('verify the deployment') {
                steps {
                withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'MY-EKS-1', contextName: '', credentialsId: 'jenkins', namespace: 'webapps', serverUrl: 'https://43F72234233079FDEB1AE954592EBE7E.gr7.us-east-1.eks.amazonaws.com']]) {
                    sh 'kubectl get pods -n webapps'
                    sh 'kubectl get svc -n webapps'
                }
                }
            }
    }
}

